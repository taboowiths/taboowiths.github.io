{"version":3,"file":"component---src-templates-blog-page-js-3d7ce430366caa1aa148.js","mappings":"oNAMA,MAwBaA,EAAOC,IAAyC,IAAtCC,MAAQC,eAAgBC,IAAQH,EACrD,OAAOI,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAOH,EAAKI,GAAIC,YAAaL,EAAKM,SAAW,EAG3D,UA5ByBC,IAGlB,IAFLT,MAAM,KAAEU,EAAMT,eAAgBC,GAAM,SACpCS,GACDF,EACC,OACEN,EAAAA,cAACS,EAAAA,EAAM,CAACD,SAAUA,EAAUN,MAAOK,EAAKG,aAAaR,OACnDF,EAAAA,cAAA,WACEW,UAAU,YACVC,WAAS,EACTC,SAAS,6BAETb,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIc,SAAS,YAAYf,EAAKgB,OAAOC,OAEvChB,EAAAA,cAAA,WACEiB,wBAAyB,CAAEC,OAAQnB,EAAKoB,MACxCL,SAAS,gBAEXd,EAAAA,cAAA,YAEK,C,6CCIb,IA3BeM,IAAoC,IAAnC,SAAEE,EAAQ,MAAEN,EAAK,SAAEkB,GAAUd,EAmB3C,OACEN,EAAAA,cAAA,OAAKW,UAAU,kBAEbX,EAAAA,cAAA,YAAOoB,GACH,C,+CCfV,MAAMnB,EAAMK,IAA6C,IAADe,EAAAC,EAAAC,EAAA,IAA3C,YAAEnB,EAAW,KAAEoB,EAAI,MAAEtB,EAAK,SAAEkB,GAAUd,EACjD,MAAM,KAAEC,IAASkB,EAAAA,EAAAA,gBAAe,cAmC1BC,EAAkBtB,GAAeG,EAAKG,aAAaN,YACnDuB,EAAgC,QAApBN,EAAGd,EAAKG,oBAAY,IAAAW,OAAA,EAAjBA,EAAmBnB,MAExC,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQ2B,EAAe,GAAGzB,OAAWyB,IAAiBzB,GACtDF,EAAAA,cAAA,QAAM4B,KAAK,cAAcC,QAASH,IAClC1B,EAAAA,cAAA,QAAM8B,SAAS,WAAWD,QAAS3B,IACnCF,EAAAA,cAAA,QAAM8B,SAAS,iBAAiBD,QAASH,IACzC1B,EAAAA,cAAA,QAAM8B,SAAS,UAAUD,QAAQ,YACjC7B,EAAAA,cAAA,QAAM4B,KAAK,eAAeC,QAAQ,YAClC7B,EAAAA,cAAA,QACE4B,KAAK,kBACLC,SAA0B,QAAjBP,EAAAf,EAAKG,oBAAY,IAAAY,GAAQ,QAARC,EAAjBD,EAAmBS,cAAM,IAAAR,OAAR,EAAjBA,EAA2BS,QAAQC,WAAY,KAE1DjC,EAAAA,cAAA,QAAM4B,KAAK,gBAAgBC,QAAS3B,IACpCF,EAAAA,cAAA,QAAM4B,KAAK,sBAAsBC,QAASH,IACzCN,EACA,EAIPnB,EAAIiC,aAAe,CACjB9B,YAAa,IAQf,K","sources":["webpack://gatsby-starter-blog/./src/templates/blog-page.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPageTemplate = ({\n  data: { site, markdownRemark: page },\n  location,\n}) => {\n  return (\n    <Layout location={location} title={site.siteMetadata.title}>\n      <article\n        className=\"blog-page\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{page.fields.slug}</h1>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: page.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n      </article>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: page } }) => {\n  return <Seo title={page.id} description={page.excerpt} />\n}\n\nexport default BlogPageTemplate\n\nexport const pageQuery = graphql`\n  query BlogPageBySlug($id: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  // const isRootPath = location.pathname === rootPath\n  // let header\n\n  // if (isRootPath) {\n  //   header = (\n  //     <h1 className=\"main-heading\">\n  //       <Link to=\"/\">{title}</Link>\n  //     </h1>\n  //   )\n  // } else {\n  //   header = (\n  //     <Link className=\"header-link-home\" to=\"/\">\n  //       {title}\n  //     </Link>\n  //   )\n  // }\n\n  return (\n    <div className=\"global-wrapper\">\n      {/* <header className=\"global-header\">{header}</header> */}\n      <main>{children}</main>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter {\n                title\n                url\n                username\n              }\n              github {\n                title\n                url\n                username\n              }\n              instagram {\n                title\n                url\n                username\n              }\n              email {\n                title\n                url\n                username\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter.username || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["Head","_ref2","data","markdownRemark","page","React","Seo","title","id","description","excerpt","_ref","site","location","Layout","siteMetadata","className","itemScope","itemType","itemProp","fields","slug","dangerouslySetInnerHTML","__html","html","children","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","lang","useStaticQuery","metaDescription","defaultTitle","name","content","property","social","twitter","username","defaultProps"],"sourceRoot":""}