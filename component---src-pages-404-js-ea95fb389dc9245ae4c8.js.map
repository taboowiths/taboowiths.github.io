{"version":3,"file":"component---src-pages-404-js-ea95fb389dc9245ae4c8.js","mappings":"2MAMA,MAWaA,EAAOA,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,mBAErC,UAbqBC,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EACtC,MAAMG,EAAYF,EAAKG,KAAKC,aAAaN,MAEzC,OACEF,EAAAA,cAACS,EAAAA,EAAM,CAACJ,SAAUA,EAAUH,MAAOI,GACjCN,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,2DACI,C,6CCiBb,IA3BeG,IAAoC,IAAnC,SAAEE,EAAQ,MAAEH,EAAK,SAAEQ,GAAUP,EAmB3C,OACEH,EAAAA,cAAA,OAAKW,UAAU,kBAEbX,EAAAA,cAAA,YAAOU,GACH,C,+CCfV,MAAMT,EAAME,IAA6C,IAADS,EAAAC,EAAAC,EAAA,IAA3C,YAAEC,EAAW,KAAEC,EAAI,MAAEd,EAAK,SAAEQ,GAAUP,EACjD,MAAM,KAAEI,IAASU,EAAAA,EAAAA,gBAAe,cAmC1BC,EAAkBH,GAAeR,EAAKC,aAAaO,YACnDI,EAAgC,QAApBP,EAAGL,EAAKC,oBAAY,IAAAI,OAAA,EAAjBA,EAAmBV,MAExC,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQmB,EAAe,GAAGjB,OAAWiB,IAAiBjB,GACtDF,EAAAA,cAAA,QAAMoB,KAAK,cAAcC,QAASH,IAClClB,EAAAA,cAAA,QAAMsB,SAAS,WAAWD,QAASnB,IACnCF,EAAAA,cAAA,QAAMsB,SAAS,iBAAiBD,QAASH,IACzClB,EAAAA,cAAA,QAAMsB,SAAS,UAAUD,QAAQ,YACjCrB,EAAAA,cAAA,QAAMoB,KAAK,eAAeC,QAAQ,YAClCrB,EAAAA,cAAA,QACEoB,KAAK,kBACLC,SAA0B,QAAjBR,EAAAN,EAAKC,oBAAY,IAAAK,GAAQ,QAARC,EAAjBD,EAAmBU,cAAM,IAAAT,OAAR,EAAjBA,EAA2BU,QAAQC,WAAY,KAE1DzB,EAAAA,cAAA,QAAMoB,KAAK,gBAAgBC,QAASnB,IACpCF,EAAAA,cAAA,QAAMoB,KAAK,sBAAsBC,QAASH,IACzCR,EACA,EAIPT,EAAIyB,aAAe,CACjBX,YAAa,IAQf,K","sources":["webpack://gatsby-starter-blog/./src/pages/404.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  // const isRootPath = location.pathname === rootPath\n  // let header\n\n  // if (isRootPath) {\n  //   header = (\n  //     <h1 className=\"main-heading\">\n  //       <Link to=\"/\">{title}</Link>\n  //     </h1>\n  //   )\n  // } else {\n  //   header = (\n  //     <Link className=\"header-link-home\" to=\"/\">\n  //       {title}\n  //     </Link>\n  //   )\n  // }\n\n  return (\n    <div className=\"global-wrapper\">\n      {/* <header className=\"global-header\">{header}</header> */}\n      <main>{children}</main>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter {\n                title\n                url\n                username\n              }\n              github {\n                title\n                url\n                username\n              }\n              instagram {\n                title\n                url\n                username\n              }\n              email {\n                title\n                url\n                username\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter.username || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","siteTitle","site","siteMetadata","Layout","children","className","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","lang","useStaticQuery","metaDescription","defaultTitle","name","content","property","social","twitter","username","defaultProps"],"sourceRoot":""}