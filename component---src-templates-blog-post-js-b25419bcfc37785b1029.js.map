{"version":3,"file":"component---src-templates-blog-post-js-b25419bcfc37785b1029.js","mappings":"qJA8BA,IA3BeA,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAUH,EAmB3C,OACEI,EAAAA,cAAA,OAAKC,UAAU,kBAEbD,EAAAA,cAAA,YAAOD,GACH,C,6GCpBV,MAsDaG,EAAOC,IAAyC,IAAtCC,MAAQC,eAAgBC,IAAQH,EACrD,OACEH,EAAAA,cAACO,EAAAA,EAAG,CACFT,MAAOQ,EAAKE,YAAYV,MACxBW,YAAaH,EAAKE,YAAYC,aAAeH,EAAKI,SAClD,EAIN,UA/DyBd,IAGlB,IAADe,EAAA,IAFJP,MAAM,SAAEQ,EAAQ,KAAEC,EAAI,KAAEC,EAAMT,eAAgBC,GAAM,SACpDT,GACDD,EACC,MAAMmB,GAA6B,QAAjBJ,EAAAG,EAAKE,oBAAY,IAAAL,OAAA,EAAjBA,EAAmBb,QAAS,QAE9C,OACEE,EAAAA,cAACiB,EAAAA,EAAM,CAACpB,SAAUA,EAAUC,MAAOiB,GACjCf,EAAAA,cAAA,WACEC,UAAU,YACViB,WAAS,EACTC,SAAS,6BAETnB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIoB,SAAS,YAAYd,EAAKE,YAAYV,OAC1CE,EAAAA,cAAA,SAAIM,EAAKE,YAAYa,OAEvBrB,EAAAA,cAAA,WACAA,EAAAA,cAAA,WACEsB,wBAAyB,CAAEC,OAAQjB,EAAKkB,MACxCJ,SAAS,gBAEXpB,EAAAA,cAAA,YAEFA,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,MACEyB,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX9B,EAAAA,cAAA,UACGY,GACCZ,EAAAA,cAAC+B,EAAAA,KAAI,CAACC,GAAIpB,EAASqB,OAAOC,KAAMC,IAAI,QAAO,KACtCvB,EAASJ,YAAYV,QAI9BE,EAAAA,cAAA,UACGa,GACCb,EAAAA,cAAC+B,EAAAA,KAAI,CAACC,GAAInB,EAAKoB,OAAOC,KAAMC,IAAI,QAC7BtB,EAAKL,YAAYV,MAAM,SAM3B,C,+CC7Cb,MAAMS,EAAMX,IAA6C,IAADe,EAAAyB,EAAAC,EAAA,IAA3C,YAAE5B,EAAW,KAAE6B,EAAI,MAAExC,EAAK,SAAEC,GAAUH,EACjD,MAAM,KAAEkB,IAASyB,EAAAA,EAAAA,gBAAe,cAmC1BC,EAAkB/B,GAAeK,EAAKE,aAAaP,YACnDgC,EAAgC,QAApB9B,EAAGG,EAAKE,oBAAY,IAAAL,OAAA,EAAjBA,EAAmBb,MAExC,OACEE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQyC,EAAe,GAAG3C,OAAW2C,IAAiB3C,GACtDE,EAAAA,cAAA,QAAM0C,KAAK,cAAcC,QAASH,IAClCxC,EAAAA,cAAA,QAAM4C,SAAS,WAAWD,QAAS7C,IACnCE,EAAAA,cAAA,QAAM4C,SAAS,iBAAiBD,QAASH,IACzCxC,EAAAA,cAAA,QAAM4C,SAAS,UAAUD,QAAQ,YACjC3C,EAAAA,cAAA,QAAM0C,KAAK,eAAeC,QAAQ,YAClC3C,EAAAA,cAAA,QACE0C,KAAK,kBACLC,SAA0B,QAAjBP,EAAAtB,EAAKE,oBAAY,IAAAoB,GAAQ,QAARC,EAAjBD,EAAmBS,cAAM,IAAAR,OAAR,EAAjBA,EAA2BS,QAAQC,WAAY,KAE1D/C,EAAAA,cAAA,QAAM0C,KAAK,gBAAgBC,QAAS7C,IACpCE,EAAAA,cAAA,QAAM0C,KAAK,sBAAsBC,QAASH,IACzCzC,EACA,EAIPQ,EAAIyC,aAAe,CACjBvC,YAAa,IAQf,K","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  // const isRootPath = location.pathname === rootPath\n  // let header\n\n  // if (isRootPath) {\n  //   header = (\n  //     <h1 className=\"main-heading\">\n  //       <Link to=\"/\">{title}</Link>\n  //     </h1>\n  //   )\n  // } else {\n  //   header = (\n  //     <Link className=\"header-link-home\" to=\"/\">\n  //       {title}\n  //     </Link>\n  //   )\n  // }\n\n  return (\n    <div className=\"global-wrapper\">\n      {/* <header className=\"global-header\">{header}</header> */}\n      <main>{children}</main>\n    </div>\n  )\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <hr />\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter {\n                title\n                url\n                username\n              }\n              github {\n                title\n                url\n                username\n              }\n              instagram {\n                title\n                url\n                username\n              }\n              email {\n                title\n                url\n                username\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter.username || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["_ref","location","title","children","React","className","Head","_ref2","data","markdownRemark","post","Seo","frontmatter","description","excerpt","_site$siteMetadata","previous","next","site","siteTitle","siteMetadata","Layout","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel","_site$siteMetadata2","_site$siteMetadata2$s","lang","useStaticQuery","metaDescription","defaultTitle","name","content","property","social","twitter","username","defaultProps"],"sourceRoot":""}